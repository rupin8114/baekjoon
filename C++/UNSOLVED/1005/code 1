#include <iostream>
#include <vector>

class building{

private:
int my_time=0; //이 건물을 짓는 시간
std::vector<building*> require; //이 건물의 선수 건물
int total_time=0; //이 건물을 짓는 총 시간

public:
void gettime(int n){
  my_time = n;
}

void getpre(building* build){
  require.push_back(build);
}

int call_time(){
  int longest = 0;
  std::vector<building*>::iterator req_itr;
  if(total_time == 0){
    for(req_itr = require.begin(); req_itr != require.end(); req_itr++){
      if(longest<(*req_itr)->call_time()) longest = (*req_itr)->call_time();
    }
    total_time = longest + my_time;
  }
  return total_time;
}

~building(){
  require.clear();
}
};

int main(){
  int testcase, n, k;
  scanf("%d", &testcase);
  for(int i=0; i<testcase; i++){
    int a, b, temp;
    scanf("%d %d", &n, &k);
    building build[n+1];
    for(int j=1; j<n+1; j++){
      scanf("%d", &temp);
      build[j].gettime(temp);
    }
    for(int j=0; j<k; j++){
      scanf("%d %d", &a, &b);
      build[b].getpre(&build[a]);
    }
    scanf("%d", &temp);
    printf("%d\n", build[temp].call_time());
  }
}
